---
# format_disks file for qubinode-usb-imager
- name: read usb device information 
  become: yes
  parted: 
    device: "{{ usb_device }}"
    unit: MiB
  register: disk_info

- name: unmount usb qubinode device
  become: yes
  mount:
    path: "{ usb_device }}{{ item.num }}"
    state: absent
  with_items:
    - "{{ disk_info.partitions }}"
  
- name: remove all partitions from disk 
  parted:
    device: "{{ usb_device }}"
    number: "{{ item.num }}"
    state: absent
  with_items:
    - "{{ disk_info.partitions }}"

- name: tell the OS the paritions has change
  become: yes
  command: >
    sudo partprobe
  register: partprobe_result
  ignore_errors: True

- name: reboot if partprobe fails
  become: yes
  shell: "/usr/bin/sleep 5 && /usr/sbin/reboot"
  async: 1
  poll: 0
  when: partprobe_result.rc == 1 and ok_to_reboot|bool

- name: wait for the reboot to complete
  become: yes
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: partprobe_result.rc == 1 and ok_to_reboot|bool

- name: create efi boot partition
  become: yes
  shell: >
    /bin/echo -e "n\np\n1\n\n100M\nt\nef00\nw\nY" | sudo gdisk "{{ usb_device }}"
  args:
    executable: /bin/bash
  ignore_errors: True

- name: create legacy boot partition
  become: yes
  shell: >
    /bin/echo -e "n\np\n2\n\n200M\nt\nef02\nw\nY"| sudo gdisk "{{ usb_device }}"
  args:
    executable: /bin/bash
  ignore_errors: True

- name: create data boot partition
  become: yes
  shell: >
    /bin/echo -e "n\np\n3\n\n\nt\n8300\nw\nY"| sudo gdisk "{{ usb_device }}"
  args:
    executable: /bin/bash
  ignore_errors: True

- name: format efi boot grub filesystem
  become: yes
  filesystem:
    fstype: vfat
    dev: "{{ usb_device }}1"
    force: yes

- name: format legacy boot grub filesystem
  become: yes
  filesystem:
    fstype: ext4
    dev: "{{ usb_device }}2"
    force: yes 

- name: format data partition filesystem
  become: yes
  filesystem:
    fstype: xfs
    dev: "{{ usb_device }}3"
    force: yes

- name: label the data partition filesystem
  become: yes
  command: xfs_admin -L qbusbdata "{{ usb_device }}3"

- name: create efi and data mount points
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
  - '/media/efi'
  - '/media/data'  